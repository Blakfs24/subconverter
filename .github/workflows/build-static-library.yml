name: Build Static Library

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - name: Windows
            os: windows-latest
            script: scripts/build.windows.library.sh
            artifact: subconverter-windows-static-lib
            shell: msys2 {0}
          - name: macOS
            os: macos-latest
            script: scripts/build.macos.library.sh
            artifact: subconverter-macos-static-lib
            shell: bash
          - name: Ubuntu
            os: ubuntu-latest
            script: scripts/build.ubuntu.library.sh
            artifact: subconverter-ubuntu-static-lib
            shell: bash

    name: Build on ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup MSYS2 (Windows)
        if: matrix.name == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git base-devel mingw-w64-x86_64-gcc mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake mingw-w64-x86_64-nghttp2 mingw-w64-x86_64-openssl mingw-w64-x86_64-pcre2 patch

      # Remove this step as it's no longer needed
      # - name: Add MSYS2 to PATH
      #   if: matrix.name == 'Windows'
      #   run: echo "C:\\msys64\\usr\\bin" >> $GITHUB_PATH

      - name: Setup macOS
        if: matrix.name == 'macOS'
        run: |
          brew update
          brew install cmake rapidjson zlib pcre2 pkgconfig

      # - name: Build Static Library
      #   shell: ${{ matrix.shell }}
      #   run: |
      #     chmod +x ${{ matrix.script }}
      #     if [ "${{ matrix.name }}" = "Ubuntu" ]; then
      #       sudo bash ${{ matrix.script }}
      #     else
      #       bash ${{ matrix.script }}
      #     fi

      - name: Build Static Library(windows)
        if: matrix.name == 'Windows'
        shell: msys2 {0}
        run: |
          bash ${{ matrix.script }}

      - name: Build Static Library(macOS)
        if: matrix.name == 'macOS'
        shell: bash
        run: |
          bash ${{ matrix.script }}
      
      - name: Build Static Library(Ubuntu)
        if: matrix.name == 'Ubuntu'
        shell: bash
        run: |
          sudo bash ${{ matrix.script }}

      - name: Package Library Files
        shell: bash
        run: |
          mkdir -p dist/include dist/lib
          # Copy header files
          cp -r src/*.h* dist/include/
          # Copy static library (adjust paths based on your build output)
          if [ "${{ matrix.name }}" = "Windows" ]; then
            cp libsubconverter.a dist/lib/
          elif [ "${{ matrix.name }}" = "macOS" ]; then
            cp libsubconverter.a dist/lib/
          else
            cp libsubconverter.a dist/lib/
          fi
          tar czf ${{ matrix.artifact }}.tar.gz dist/

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: |
            subconverter-windows-static-lib.tar.gz
            subconverter-macos-static-lib.tar.gz
            subconverter-ubuntu-static-lib.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
